name: linux_arm64_gmake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntn:
    runs-on: ubuntu-22.04

    steps:
      - name: Setup cmake, ninja, ...
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build pkg-config
          
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
    
      - name: Checkout repository
        uses: actions/checkout@v3.2.0
      
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: freetype Generate makefile
        run: |
          cd Engine/Source/ThirdParty/freetype
          cmake -B build \
            -G "Unix Makefiles" \
            -DCMAKE_TOOLCHAIN_FILE=${{ steps.setup-ndk.outputs.ndk-path }}/build/cmake/android.toolchain.cmake \
            -DCMAKE_CXX_FLAGS="/MT" \
            -DANDROID_PLATFORM=25 \
            -DANDROID_ABI="arm64-v8a" \
            -DSDL_STATIC_PIC=ON \
            -DSDL_VENDOR_INFO="Github Workflow" \
            -DCMAKE_INSTALL_PREFIX=prefix \
            -DCMAKE_BUILD_TYPE=Debug

      - name: freetype Compile debug version
        run: |
          cd Engine/Source/ThirdParty/freetype
          cmake --build build --config Debug --parallel --verbose

      - name: AssetPipeline Generate makefile
        run: |
          cd Engine/Source/ThirdParty/AssetPipeline
          chmod +x make_linux_gmake2.sh
          bash make_linux_gmake2.sh

      - name: AssetPipeline Compile debug version
        run: |
          cd Engine/Source/ThirdParty/AssetPipeline
          make config=debug

      - name: bgfx Generate makefile
        run: |
          cd Engine/Source/ThirdParty/bgfx
          chmod +x ../bx/tools/bin/linux/genie
          ../bx/tools/bin/linux/genie --gcc=android-arm64 gmake
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: bgfx Compile debug version
        run: |
          cd Engine/Source/ThirdParty/bgfx/.build/projects/gmake-android-arm64
          make config=debug

      - name: sdl Generate makefile
        run: |
          cd Engine/Source/ThirdParty/sdl
          cmake -B build \
            -G "Unix Makefiles" \
            -DCMAKE_TOOLCHAIN_FILE=${{ steps.setup-ndk.outputs.ndk-path }}/build/cmake/android.toolchain.cmake \
            -DSDL_WERROR=ON \
            -DSDL_FORCE_STATIC_VCRT=ON\
            -DANDROID_PLATFORM=25 \
            -DANDROID_ABI="arm64-v8a" \
            -DSDL_STATIC_PIC=ON \
            -DSDL_VENDOR_INFO="Github Workflow" \
            -DCMAKE_INSTALL_PREFIX=prefix \
            -DCMAKE_BUILD_TYPE=Debugcd Engine/Source/ThirdParty/bgfx

      - name: sdl Compile debug version
        run: |
          cd Engine/Source/ThirdParty/sdl
          cmake --build build --config Debug --parallel --verbose

      - name: engine Generate makefile
        run: |
          chmod +x ${{github.workspace}}/MakeEngine_linux_gmake-android-arm64.sh
          bash ${{github.workspace}}/MakeEngine_linux_gmake-android-arm64.sh
        env:
          CD_PLATFORM: Linux

      - name: engine Compile debug version
        run: |
          make config=debug

      - name: Upload built results to Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: engine_build_linux_gmake2
          path: |
            ${{github.workspace}}/**/*.h
            ${{github.workspace}}/**/*.hpp
            ${{github.workspace}}/**/*.a
            ${{github.workspace}}/**/*.so